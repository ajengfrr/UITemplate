// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace PreProc.Models;

public partial class PreProcContext : DbContext
{
    public PreProcContext(DbContextOptions<PreProcContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CogsNpc> CogsNpcs { get; set; }

    public virtual DbSet<CogsrevNpc> CogsrevNpcs { get; set; }

    public virtual DbSet<DataBillReqNew> DataBillReqNews { get; set; }

    public virtual DbSet<MasterListPreProcReminder> MasterListPreProcReminders { get; set; }

    public virtual DbSet<MlpPoAllOracle> MlpPoAllOracles { get; set; }

    public virtual DbSet<MlptStockreqPoAll> MlptStockreqPoAlls { get; set; }

    public virtual DbSet<MlptStockreqPoDoV> MlptStockreqPoDoVs { get; set; }

    public virtual DbSet<MsCommentType> MsCommentTypes { get; set; }

    public virtual DbSet<MsCompetition> MsCompetitions { get; set; }

    public virtual DbSet<MsCompetitor> MsCompetitors { get; set; }

    public virtual DbSet<MsContingencyCost> MsContingencyCosts { get; set; }

    public virtual DbSet<MsCurrency> MsCurrencies { get; set; }

    public virtual DbSet<MsCustomerVw> MsCustomerVws { get; set; }

    public virtual DbSet<MsDocType> MsDocTypes { get; set; }

    public virtual DbSet<MsEscalationToAm> MsEscalationToAms { get; set; }

    public virtual DbSet<MsMaintenanceScope> MsMaintenanceScopes { get; set; }

    public virtual DbSet<MsNkproduct> MsNkproducts { get; set; }

    public virtual DbSet<MsParameterValue> MsParameterValues { get; set; }

    public virtual DbSet<MsPid> MsPids { get; set; }

    public virtual DbSet<MsPreProcStage> MsPreProcStages { get; set; }

    public virtual DbSet<MsPresalesId> MsPresalesIds { get; set; }

    public virtual DbSet<MsPrincipalPreload> MsPrincipalPreloads { get; set; }

    public virtual DbSet<MsProcurementType> MsProcurementTypes { get; set; }

    public virtual DbSet<MsProjectSource> MsProjectSources { get; set; }

    public virtual DbSet<MsProjectType> MsProjectTypes { get; set; }

    public virtual DbSet<MsRiskType> MsRiskTypes { get; set; }

    public virtual DbSet<MsSourceBudget> MsSourceBudgets { get; set; }

    public virtual DbSet<MsVendor> MsVendors { get; set; }

    public virtual DbSet<PreProcApprovalHistory> PreProcApprovalHistories { get; set; }

    public virtual DbSet<PreProcAuditTrail> PreProcAuditTrails { get; set; }

    public virtual DbSet<PreProcAuditTrailDetailItem> PreProcAuditTrailDetailItems { get; set; }

    public virtual DbSet<PreProcAuditTrailProjectRevenue> PreProcAuditTrailProjectRevenues { get; set; }

    public virtual DbSet<PreProcClarification> PreProcClarifications { get; set; }

    public virtual DbSet<PreProcClarificationAttachment> PreProcClarificationAttachments { get; set; }

    public virtual DbSet<PreProcDetail> PreProcDetails { get; set; }

    public virtual DbSet<PreProcFileAttachment> PreProcFileAttachments { get; set; }

    public virtual DbSet<PreProcGeneralInfo2> PreProcGeneralInfo2s { get; set; }

    public virtual DbSet<PreProcHeaderAttachment> PreProcHeaderAttachments { get; set; }

    public virtual DbSet<PreProcHistoryReminder> PreProcHistoryReminders { get; set; }

    public virtual DbSet<PreProcPendingBillingReason> PreProcPendingBillingReasons { get; set; }

    public virtual DbSet<PreProcPmochecklist> PreProcPmochecklists { get; set; }

    public virtual DbSet<PreProcPodatum> PreProcPodata { get; set; }

    public virtual DbSet<PreProcPrincipalProjectRevenue> PreProcPrincipalProjectRevenues { get; set; }

    public virtual DbSet<PreProcReminder> PreProcReminders { get; set; }

    public virtual DbSet<PreProcRisk> PreProcRisks { get; set; }

    public virtual DbSet<PreProcRiskAssesmentDatum> PreProcRiskAssesmentData { get; set; }

    public virtual DbSet<PreProcRiskDatum> PreProcRiskData { get; set; }

    public virtual DbSet<PreProcSession> PreProcSessions { get; set; }

    public virtual DbSet<RevNpc> RevNpcs { get; set; }

    public virtual DbSet<StockReqItemNewReminderHistory> StockReqItemNewReminderHistories { get; set; }

    public virtual DbSet<StockReqReminderHistory> StockReqReminderHistories { get; set; }

    public virtual DbSet<StockRequisitionMonitoring> StockRequisitionMonitorings { get; set; }

    public virtual DbSet<TempPreProcDetail> TempPreProcDetails { get; set; }

    public virtual DbSet<VwCshdEpm> VwCshdEpms { get; set; }

    public virtual DbSet<VwDataInvoice> VwDataInvoices { get; set; }

    public virtual DbSet<VwEmployeeBase> VwEmployeeBases { get; set; }

    public virtual DbSet<VwEmployeeBaseEreq> VwEmployeeBaseEreqs { get; set; }

    public virtual DbSet<VwEmployeeBasePrm> VwEmployeeBasePrms { get; set; }

    public virtual DbSet<VwExportItem> VwExportItems { get; set; }

    public virtual DbSet<VwGetAdminMember> VwGetAdminMembers { get; set; }

    public virtual DbSet<VwGetAllOptyId> VwGetAllOptyIds { get; set; }

    public virtual DbSet<VwGetAllPid> VwGetAllPids { get; set; }

    public virtual DbSet<VwGetAmmember> VwGetAmmembers { get; set; }

    public virtual DbSet<VwGetBodfull> VwGetBodfulls { get; set; }

    public virtual DbSet<VwGetMplPoAll> VwGetMplPoAlls { get; set; }

    public virtual DbSet<VwGetNkpname> VwGetNkpnames { get; set; }

    public virtual DbSet<VwGetPcmemberFull> VwGetPcmemberFulls { get; set; }

    public virtual DbSet<VwGetPmmemberFull> VwGetPmmemberFulls { get; set; }

    public virtual DbSet<VwGetPmomemberFull> VwGetPmomemberFulls { get; set; }

    public virtual DbSet<VwGetPossibleProductManager> VwGetPossibleProductManagers { get; set; }

    public virtual DbSet<VwGetPresalesMemberFull> VwGetPresalesMemberFulls { get; set; }

    public virtual DbSet<VwGetProcurementMemberFull> VwGetProcurementMemberFulls { get; set; }

    public virtual DbSet<VwGetProjectSupportMemberFull> VwGetProjectSupportMemberFulls { get; set; }

    public virtual DbSet<VwGetTenderAdminMemberFull> VwGetTenderAdminMemberFulls { get; set; }

    public virtual DbSet<VwGetVendor> VwGetVendors { get; set; }

    public virtual DbSet<VwGetWarehouseMember> VwGetWarehouseMembers { get; set; }

    public virtual DbSet<VwGpTrStockReqForm> VwGpTrStockReqForms { get; set; }

    public virtual DbSet<VwIssuePendingBillingReason> VwIssuePendingBillingReasons { get; set; }

    public virtual DbSet<VwKodeAccount> VwKodeAccounts { get; set; }

    public virtual DbSet<VwManagerP> VwManagerPs { get; set; }

    public virtual DbSet<VwMappingSagroup> VwMappingSagroups { get; set; }

    public virtual DbSet<VwReasonPicname> VwReasonPicnames { get; set; }

    public virtual DbSet<VwReasonPicnameClear> VwReasonPicnameClears { get; set; }

    public virtual DbSet<VwReminderNewStockReq> VwReminderNewStockReqs { get; set; }

    public virtual DbSet<VwReminderPendingBillingReasonHeader> VwReminderPendingBillingReasonHeaders { get; set; }

    public virtual DbSet<VwReportTrackingDeliverySheet> VwReportTrackingDeliverySheets { get; set; }

    public virtual DbSet<VwStockReqReminder> VwStockReqReminders { get; set; }

    public virtual DbSet<VwStockReqReminderGr> VwStockReqReminderGrs { get; set; }

    public virtual DbSet<VwStockReqReminderGrheader> VwStockReqReminderGrheaders { get; set; }

    public virtual DbSet<VwVendor> VwVendors { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CogsNpc>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("COGS_NPC");

            entity.Property(e => e.AccountName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Amname)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("AMName");
            entity.Property(e => e.ContractDate).HasColumnType("datetime");
            entity.Property(e => e.CostSheetId)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Counter)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CurrCode)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.ExRate).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.Login)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Nkpcode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NKPCode");
            entity.Property(e => e.Pidfull)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("PIDFull");
            entity.Property(e => e.PocontractNo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("POContractNo");
            entity.Property(e => e.Price).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ProjectId)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("ProjectID");
            entity.Property(e => e.ProjectName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Saname)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("SAName");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SubTypeCode)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.SubTypeName)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.Top)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("TOP");
            entity.Property(e => e.Total).HasColumnType("decimal(15, 2)");
        });

        modelBuilder.Entity<CogsrevNpc>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("COGSRev_NPC");

            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CurrCode)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Nkpcode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NKPCode");
            entity.Property(e => e.Pidfull)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("PIDFull");
            entity.Property(e => e.ProjectId)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("ProjectID");
            entity.Property(e => e.TotalCogs)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("TotalCOGS");
            entity.Property(e => e.TotalRevenue).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.UnitCogs)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("UnitCOGS");
            entity.Property(e => e.UnitRevenue).HasColumnType("decimal(15, 2)");
        });

        modelBuilder.Entity<DataBillReqNew>(entity =>
        {
            entity.ToTable("DataBillReqNew");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BastattachId).HasColumnName("BASTAttachID");
            entity.Property(e => e.Bastdt)
                .HasColumnType("datetime")
                .HasColumnName("BASTDt");
            entity.Property(e => e.Bastid).HasColumnName("BASTID");
            entity.Property(e => e.BillReqDate).HasColumnType("datetime");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Milestone).IsUnicode(false);
            entity.Property(e => e.Pid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PID");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.ProjectIdrevenue)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ProjectIDRevenue");
            entity.Property(e => e.ReceiveDate).HasColumnType("datetime");
            entity.Property(e => e.RequestDate).HasColumnType("datetime");
            entity.Property(e => e.StbastattachId).HasColumnName("STBASTAttachID");
            entity.Property(e => e.Stbastdt)
                .HasColumnType("datetime")
                .HasColumnName("STBASTDt");
            entity.Property(e => e.ToPdescription)
                .IsUnicode(false)
                .HasColumnName("ToPDescription");
            entity.Property(e => e.ToppayLineId).HasColumnName("TOPPayLineID");
            entity.Property(e => e.Wbsid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("WBSID");
        });

        modelBuilder.Entity<MasterListPreProcReminder>(entity =>
        {
            entity.ToTable("Master_ListPreProcReminder");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ReminderName)
                .IsRequired()
                .IsUnicode(false);
        });

        modelBuilder.Entity<MlpPoAllOracle>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MLP_PO_ALL_ORACLE");

            entity.Property(e => e.AddressLine1)
                .HasMaxLength(240)
                .HasColumnName("ADDRESS_LINE1");
            entity.Property(e => e.AddressLine2)
                .HasMaxLength(240)
                .HasColumnName("ADDRESS_LINE2");
            entity.Property(e => e.AddressLine3)
                .HasMaxLength(240)
                .HasColumnName("ADDRESS_LINE3");
            entity.Property(e => e.AddressLine4)
                .HasMaxLength(240)
                .HasColumnName("ADDRESS_LINE4");
            entity.Property(e => e.Buyer)
                .HasMaxLength(362)
                .HasColumnName("BUYER");
            entity.Property(e => e.City)
                .HasMaxLength(60)
                .HasColumnName("CITY");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(15)
                .HasColumnName("CURRENCY_CODE");
            entity.Property(e => e.Description)
                .HasMaxLength(240)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.DueDate)
                .HasColumnType("datetime")
                .HasColumnName("DUE_DATE");
            entity.Property(e => e.Fax)
                .HasMaxLength(27)
                .HasColumnName("FAX");
            entity.Property(e => e.ItemNo)
                .HasMaxLength(40)
                .HasColumnName("ITEM_NO");
            entity.Property(e => e.NamaVendor)
                .HasMaxLength(240)
                .HasColumnName("NAMA_VENDOR");
            entity.Property(e => e.NoPo)
                .HasMaxLength(20)
                .HasColumnName("NO_PO");
            entity.Property(e => e.NoVendor)
                .HasMaxLength(30)
                .HasColumnName("NO_VENDOR");
            entity.Property(e => e.Phone)
                .HasMaxLength(27)
                .HasColumnName("PHONE");
            entity.Property(e => e.Pid)
                .HasMaxLength(150)
                .HasColumnName("PID");
            entity.Property(e => e.PostalCode)
                .HasMaxLength(60)
                .HasColumnName("POSTAL_CODE");
            entity.Property(e => e.Quantity)
                .HasMaxLength(38)
                .HasColumnName("QUANTITY");
            entity.Property(e => e.TanggalPo)
                .HasColumnType("datetime")
                .HasColumnName("TANGGAL_PO");
            entity.Property(e => e.Term)
                .HasMaxLength(50)
                .HasColumnName("TERM");
            entity.Property(e => e.UnitPrice)
                .HasMaxLength(38)
                .HasColumnName("UNIT_PRICE");
            entity.Property(e => e.Uom)
                .HasMaxLength(25)
                .HasColumnName("UOM");
            entity.Property(e => e.VendorCatalog)
                .HasMaxLength(255)
                .HasColumnName("VENDOR_CATALOG");
        });

        modelBuilder.Entity<MlptStockreqPoAll>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MLPT_STOCKREQ_PO_ALL");

            entity.Property(e => e.Buyer)
                .HasMaxLength(362)
                .HasColumnName("BUYER");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(15)
                .HasColumnName("CURRENCY_CODE");
            entity.Property(e => e.DueDate)
                .HasColumnType("datetime")
                .HasColumnName("DUE_DATE");
            entity.Property(e => e.ItemDescription)
                .HasMaxLength(240)
                .HasColumnName("ITEM_DESCRIPTION");
            entity.Property(e => e.ItemNo)
                .HasMaxLength(40)
                .HasColumnName("ITEM_NO");
            entity.Property(e => e.PidSo)
                .HasMaxLength(240)
                .HasColumnName("PID_SO");
            entity.Property(e => e.PoDate)
                .HasColumnType("datetime")
                .HasColumnName("PO_DATE");
            entity.Property(e => e.PoNumber)
                .HasMaxLength(20)
                .HasColumnName("PO_NUMBER");
            entity.Property(e => e.PoQuantity)
                .HasColumnType("numeric(38, 4)")
                .HasColumnName("PO_QUANTITY");
            entity.Property(e => e.PoUnitPrice)
                .HasColumnType("numeric(38, 4)")
                .HasColumnName("PO_UNIT_PRICE");
            entity.Property(e => e.StockReqNumber)
                .HasMaxLength(13)
                .HasColumnName("STOCK_REQ_NUMBER");
            entity.Property(e => e.Term)
                .HasMaxLength(50)
                .HasColumnName("TERM");
            entity.Property(e => e.Uom)
                .HasMaxLength(25)
                .HasColumnName("UOM");
            entity.Property(e => e.VendorCatalog)
                .HasMaxLength(255)
                .HasColumnName("VENDOR_CATALOG");
            entity.Property(e => e.VendorName)
                .HasMaxLength(240)
                .HasColumnName("VENDOR_NAME");
            entity.Property(e => e.VendorNo)
                .HasMaxLength(30)
                .HasColumnName("VENDOR_NO");
        });

        modelBuilder.Entity<MlptStockreqPoDoV>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MLPT_STOCKREQ_PO_DO_V");

            entity.Property(e => e.Amount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("AMOUNT");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("CURRENCY_CODE");
            entity.Property(e => e.DoNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DO_NUMBER");
            entity.Property(e => e.DoQty).HasColumnName("DO_QTY");
            entity.Property(e => e.DoRmaDate)
                .HasColumnType("datetime")
                .HasColumnName("DO_RMA_DATE");
            entity.Property(e => e.GrDate)
                .HasColumnType("datetime")
                .HasColumnName("GR_DATE");
            entity.Property(e => e.ItemDescription)
                .IsUnicode(false)
                .HasColumnName("ITEM_DESCRIPTION");
            entity.Property(e => e.LotNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("LOT_NUMBER");
            entity.Property(e => e.Nks)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NKS");
            entity.Property(e => e.OrgId).HasColumnName("ORG_ID");
            entity.Property(e => e.PidSoRma)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PID_SO_RMA");
            entity.Property(e => e.PoDate)
                .HasColumnType("datetime")
                .HasColumnName("PO_DATE");
            entity.Property(e => e.PoNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PO_NUMBER");
            entity.Property(e => e.PoQuantity).HasColumnName("PO_QUANTITY");
            entity.Property(e => e.PoUnitPrice)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PO_UNIT_PRICE");
            entity.Property(e => e.QtyGrnRma).HasColumnName("QTY_GRN_RMA");
            entity.Property(e => e.Requestor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("REQUESTOR");
            entity.Property(e => e.StockReqNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STOCK_REQ_NUMBER");
        });

        modelBuilder.Entity<MsCommentType>(entity =>
        {
            entity.ToTable("msCommentType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Type).HasMaxLength(50);
        });

        modelBuilder.Entity<MsCompetition>(entity =>
        {
            entity.ToTable("msCompetition");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Type).HasMaxLength(255);
        });

        modelBuilder.Entity<MsCompetitor>(entity =>
        {
            entity.ToTable("msCompetitor");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Type).HasMaxLength(255);
        });

        modelBuilder.Entity<MsContingencyCost>(entity =>
        {
            entity.ToTable("msContingencyCost");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Text).HasMaxLength(50);
        });

        modelBuilder.Entity<MsCurrency>(entity =>
        {
            entity.ToTable("msCurrency");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false);
        });

        modelBuilder.Entity<MsCustomerVw>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("msCustomerVw");

            entity.Property(e => e.AccountId)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("AccountID");
            entity.Property(e => e.AccountName)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.FgActive)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.InitialCode)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Modified).HasColumnType("datetime");
            entity.Property(e => e.MsAccountId).HasColumnName("msAccount_ID");
        });

        modelBuilder.Entity<MsDocType>(entity =>
        {
            entity.ToTable("msDocType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Desc).HasMaxLength(50);
            entity.Property(e => e.DocType)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<MsEscalationToAm>(entity =>
        {
            entity.ToTable("msEscalationToAM");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.EscalationReason)
                .IsRequired()
                .IsUnicode(false);
        });

        modelBuilder.Entity<MsMaintenanceScope>(entity =>
        {
            entity.ToTable("msMaintenanceScope");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Type).HasMaxLength(255);
        });

        modelBuilder.Entity<MsNkproduct>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("msNKProduct");

            entity.Property(e => e.Avtive)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Domain)
                .HasMaxLength(8000)
                .IsUnicode(false);
            entity.Property(e => e.Modified).HasColumnType("datetime");
            entity.Property(e => e.NkpcodeLinkTitle)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NKPCode (LinkTitle)");
            entity.Property(e => e.NkpcodeLinkTitleNoMenu)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NKPCode (LinkTitleNoMenu)");
            entity.Property(e => e.NkpcodeTitle)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NKPCode (Title)");
            entity.Property(e => e.Nkpname)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("NKPName");
            entity.Property(e => e.ProductManager)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.TeamService)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.TeamServiceUnitShortName)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("TeamService:UnitShortName");
            entity.Property(e => e.TypeCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VendorId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("VendorID");
        });

        modelBuilder.Entity<MsParameterValue>(entity =>
        {
            entity.ToTable("msParameterValue");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AlphaNumericValue).IsUnicode(false);
            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.NumericValue).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.Parameter).IsUnicode(false);
            entity.Property(e => e.Title)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<MsPid>(entity =>
        {
            entity.ToTable("msPID");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Am)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("AM");
            entity.Property(e => e.Pid)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PID");
        });

        modelBuilder.Entity<MsPreProcStage>(entity =>
        {
            entity.ToTable("msPreProcStage");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Stage).HasMaxLength(50);
            entity.Property(e => e.Text).HasMaxLength(50);
        });

        modelBuilder.Entity<MsPresalesId>(entity =>
        {
            entity.ToTable("msPresalesID");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PresalesId)
                .HasMaxLength(50)
                .HasColumnName("PresalesID");
        });

        modelBuilder.Entity<MsPrincipalPreload>(entity =>
        {
            entity.ToTable("msPrincipalPreload");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Type).HasMaxLength(50);
        });

        modelBuilder.Entity<MsProcurementType>(entity =>
        {
            entity.ToTable("msProcurementType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Type).HasMaxLength(255);
        });

        modelBuilder.Entity<MsProjectSource>(entity =>
        {
            entity.ToTable("msProjectSource");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Type).HasMaxLength(255);
        });

        modelBuilder.Entity<MsProjectType>(entity =>
        {
            entity.ToTable("msProjectType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Type).HasMaxLength(255);
        });

        modelBuilder.Entity<MsRiskType>(entity =>
        {
            entity.ToTable("msRiskType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.RiskType).HasMaxLength(50);
        });

        modelBuilder.Entity<MsSourceBudget>(entity =>
        {
            entity.ToTable("msSourceBudget");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Type).HasMaxLength(255);
        });

        modelBuilder.Entity<MsVendor>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("msVendor");

            entity.Property(e => e.VendorName)
                .HasMaxLength(240)
                .HasColumnName("VENDOR_NAME");
            entity.Property(e => e.VendorTypeLookupCode)
                .HasMaxLength(30)
                .HasColumnName("VENDOR_TYPE_LOOKUP_CODE");
        });

        modelBuilder.Entity<PreProcApprovalHistory>(entity =>
        {
            entity.ToTable("PreProcApprovalHistory");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApprovalDate)
                .HasColumnType("datetime")
                .HasColumnName("Approval Date");
            entity.Property(e => e.ApproverName)
                .HasMaxLength(255)
                .HasColumnName("Approver Name");
            entity.Property(e => e.ApproverRole)
                .HasMaxLength(255)
                .HasColumnName("Approver Role");
            entity.Property(e => e.DetailId).HasColumnName("DetailID");
            entity.Property(e => e.DomainName).HasMaxLength(255);
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.Status).HasMaxLength(255);

            entity.HasOne(d => d.TypeNavigation).WithMany(p => p.PreProcApprovalHistories)
                .HasForeignKey(d => d.Type)
                .HasConstraintName("FK_PreProcApprovalHistory_msCommentType");
        });

        modelBuilder.Entity<PreProcAuditTrail>(entity =>
        {
            entity.ToTable("PreProcAuditTrail");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ModifiedTime).HasColumnType("datetime");
            entity.Property(e => e.Pcname).HasColumnName("PCName");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
        });

        modelBuilder.Entity<PreProcAuditTrailDetailItem>(entity =>
        {
            entity.ToTable("PreProcAuditTrailDetailItem");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DetailId).HasColumnName("DetailID");
            entity.Property(e => e.FieldName).HasMaxLength(50);
            entity.Property(e => e.Idnew)
                .HasMaxLength(10)
                .HasColumnName("IDNew");
            entity.Property(e => e.IndexId).HasColumnName("IndexID");
            entity.Property(e => e.ModifiedTime).HasColumnType("datetime");
            entity.Property(e => e.Pcname).HasColumnName("PCName");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.TempDetailId).HasColumnName("TempDetailID");
        });

        modelBuilder.Entity<PreProcAuditTrailProjectRevenue>(entity =>
        {
            entity.ToTable("PreProcAuditTrailProjectRevenue");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FieldName).HasMaxLength(50);
            entity.Property(e => e.ModifiedTime).HasColumnType("datetime");
            entity.Property(e => e.Pcname).HasColumnName("PCName");
            entity.Property(e => e.RiskId).HasColumnName("RiskID");
            entity.Property(e => e.TempDetailId).HasColumnName("TempDetailID");
        });

        modelBuilder.Entity<PreProcClarification>(entity =>
        {
            entity.ToTable("PreProcClarification");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ClarAttachment).HasMaxLength(255);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("Created By");
            entity.Property(e => e.MailTo).HasMaxLength(255);
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.UserNameMailTo).HasMaxLength(255);

            entity.HasOne(d => d.PreProc).WithMany(p => p.PreProcClarifications)
                .HasForeignKey(d => d.PreProcId)
                .HasConstraintName("FK_PreProcClarification_PreProcGeneralInfo2");
        });

        modelBuilder.Entity<PreProcClarificationAttachment>(entity =>
        {
            entity.ToTable("PreProcClarificationAttachment");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ClarificationId).HasColumnName("ClarificationID");
            entity.Property(e => e.FileName).HasMaxLength(255);
            entity.Property(e => e.InitialFileName).HasMaxLength(255);
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");

            entity.HasOne(d => d.Clarification).WithMany(p => p.PreProcClarificationAttachments)
                .HasForeignKey(d => d.ClarificationId)
                .HasConstraintName("FK_PreProcClarificationAttachment_PreProcClarification");

            entity.HasOne(d => d.PreProc).WithMany(p => p.PreProcClarificationAttachments)
                .HasForeignKey(d => d.PreProcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PreProcClarificationAttachment_PreProcGeneralInfo21");
        });

        modelBuilder.Entity<PreProcDetail>(entity =>
        {
            entity.HasKey(e => e.DetailId);

            entity.ToTable("PreProcDetail");

            entity.Property(e => e.DetailId).HasColumnName("DetailID");
            entity.Property(e => e.AmmanagerApproval)
                .HasMaxLength(255)
                .HasColumnName("AMManagerApproval");
            entity.Property(e => e.AuditDetailId).HasColumnName("AuditDetailID");
            entity.Property(e => e.Currency).HasMaxLength(255);
            entity.Property(e => e.Eta)
                .HasColumnType("datetime")
                .HasColumnName("ETA");
            entity.Property(e => e.Etd)
                .HasColumnType("datetime")
                .HasColumnName("ETD");
            entity.Property(e => e.ExpectedPoissuedDate)
                .HasColumnType("datetime")
                .HasColumnName("ExpectedPOIssuedDate");
            entity.Property(e => e.FirstId).HasColumnName("FirstID");
            entity.Property(e => e.Grbacklog).HasColumnName("GRBacklog");
            entity.Property(e => e.Grdate)
                .HasColumnType("datetime")
                .HasColumnName("GRDate");
            entity.Property(e => e.Grn)
                .HasMaxLength(255)
                .HasColumnName("GRN");
            entity.Property(e => e.GrnattachId).HasColumnName("GRNAttachID");
            entity.Property(e => e.Grqty).HasColumnName("GRQty");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Idnew)
                .HasMaxLength(10)
                .HasColumnName("IDNew");
            entity.Property(e => e.ItemDesc).HasMaxLength(255);
            entity.Property(e => e.Mlptpo)
                .HasMaxLength(255)
                .HasColumnName("MLPTPO");
            entity.Property(e => e.Mlptpodate)
                .HasColumnType("datetime")
                .HasColumnName("MLPTPODate");
            entity.Property(e => e.Mlptpono)
                .HasMaxLength(50)
                .HasColumnName("MLPTPONo");
            entity.Property(e => e.MpoattachId).HasColumnName("MPOAttachID");
            entity.Property(e => e.Nkpcode)
                .HasMaxLength(255)
                .HasColumnName("NKPCode");
            entity.Property(e => e.Pidfull)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PIDFull");
            entity.Property(e => e.PonumberId)
                .HasMaxLength(255)
                .HasColumnName("PONumberID");
            entity.Property(e => e.PreProcId)
                .HasMaxLength(50)
                .HasColumnName("PrePROC_ID");
            entity.Property(e => e.PresalesReview).HasMaxLength(255);
            entity.Property(e => e.Principle).HasMaxLength(255);
            entity.Property(e => e.ProcessedAmreview).HasColumnName("ProcessedAMReview");
            entity.Property(e => e.ProductManager).HasMaxLength(255);
            entity.Property(e => e.Risk).HasMaxLength(50);
            entity.Property(e => e.SecondId).HasColumnName("SecondID");
            entity.Property(e => e.Spec).HasMaxLength(255);
            entity.Property(e => e.SpecAttachId).HasColumnName("SpecAttachID");
            entity.Property(e => e.SurDuk).HasMaxLength(255);
            entity.Property(e => e.SurdukAttachId).HasColumnName("SurdukAttachID");
            entity.Property(e => e.TotalCogs)
                .HasMaxLength(255)
                .HasColumnName("TotalCOGS");
            entity.Property(e => e.TotalPrice).HasMaxLength(255);
            entity.Property(e => e.UnitCogs).HasColumnName("UnitCOGS");
            entity.Property(e => e.Vendor).HasMaxLength(255);
            entity.Property(e => e.VendorQuoAttachId).HasColumnName("VendorQuoAttachID");
            entity.Property(e => e.VendorQuotation).HasMaxLength(255);

            entity.HasOne(d => d.IdNavigation).WithMany(p => p.PreProcDetails)
                .HasForeignKey(d => d.Id)
                .HasConstraintName("FK_PreProcDetail_PreProcGeneralInfo2");
        });

        modelBuilder.Entity<PreProcFileAttachment>(entity =>
        {
            entity.ToTable("PreProcFileAttachment");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BastattachId).HasColumnName("BASTAttachID");
            entity.Property(e => e.Bastid).HasColumnName("BASTID");
            entity.Property(e => e.DocumentTypeId).HasColumnName("DocumentTypeID");
            entity.Property(e => e.Folder).HasMaxLength(50);
            entity.Property(e => e.GrnattachId).HasColumnName("GRNAttachID");
            entity.Property(e => e.ModifiedBy)
                .HasMaxLength(255)
                .HasColumnName("Modified_by");
            entity.Property(e => e.MpoattachId).HasColumnName("MPOAttachID");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.SpecAttachId).HasColumnName("SpecAttachID");
            entity.Property(e => e.StbastattachId).HasColumnName("STBASTAttachID");
            entity.Property(e => e.StrictedFileName).HasMaxLength(255);
            entity.Property(e => e.SurdukAttachId).HasColumnName("SurdukAttachID");
            entity.Property(e => e.VendorQuoAttachId).HasColumnName("VendorQuoAttachID");

            entity.HasOne(d => d.Bastattach).WithMany(p => p.PreProcFileAttachmentBastattaches)
                .HasForeignKey(d => d.BastattachId)
                .HasConstraintName("FK_PreProcFileAttachment_DataBillReqNew");

            entity.HasOne(d => d.DocumentType).WithMany(p => p.PreProcFileAttachments)
                .HasForeignKey(d => d.DocumentTypeId)
                .HasConstraintName("FK_PreProcFileAttachment_msDocType");

            entity.HasOne(d => d.Grnattach).WithMany(p => p.PreProcFileAttachmentGrnattaches)
                .HasForeignKey(d => d.GrnattachId)
                .HasConstraintName("FK_PreProcFileAttachment_PreProcDetail4");

            entity.HasOne(d => d.Mpoattach).WithMany(p => p.PreProcFileAttachmentMpoattaches)
                .HasForeignKey(d => d.MpoattachId)
                .HasConstraintName("FK_PreProcFileAttachment_PreProcDetail3");

            entity.HasOne(d => d.SpecAttach).WithMany(p => p.PreProcFileAttachmentSpecAttaches)
                .HasForeignKey(d => d.SpecAttachId)
                .HasConstraintName("FK_PreProcFileAttachment_PreProcDetail1");

            entity.HasOne(d => d.Stbastattach).WithMany(p => p.PreProcFileAttachmentStbastattaches)
                .HasForeignKey(d => d.StbastattachId)
                .HasConstraintName("FK_PreProcFileAttachment_DataBillReqNew1");

            entity.HasOne(d => d.SurdukAttach).WithMany(p => p.PreProcFileAttachmentSurdukAttaches)
                .HasForeignKey(d => d.SurdukAttachId)
                .HasConstraintName("FK_PreProcFileAttachment_PreProcDetail");

            entity.HasOne(d => d.VendorQuoAttach).WithMany(p => p.PreProcFileAttachmentVendorQuoAttaches)
                .HasForeignKey(d => d.VendorQuoAttachId)
                .HasConstraintName("FK_PreProcFileAttachment_PreProcDetail2");
        });

        modelBuilder.Entity<PreProcGeneralInfo2>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PreProcG__3214EC2756E911E9");

            entity.ToTable("PreProcGeneralInfo2");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Am)
                .HasMaxLength(255)
                .HasColumnName("AM");
            entity.Property(e => e.AppCreatedBy)
                .HasMaxLength(255)
                .HasColumnName("App Created By");
            entity.Property(e => e.AppModifiedBy)
                .HasMaxLength(255)
                .HasColumnName("App Modified By");
            entity.Property(e => e.ContentType)
                .HasMaxLength(4000)
                .HasColumnName("Content Type");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("Created By");
            entity.Property(e => e.CreationDate)
                .HasColumnType("datetime")
                .HasColumnName("Creation Date");
            entity.Property(e => e.Customer).HasMaxLength(255);
            entity.Property(e => e.CustomerCode).HasMaxLength(255);
            entity.Property(e => e.Cvpc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CVPC");
            entity.Property(e => e.Cvpm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CVPM");
            entity.Property(e => e.Edit).HasMaxLength(4000);
            entity.Property(e => e.EmailCommitteeDefault).HasMaxLength(255);
            entity.Property(e => e.EstGpgeneral)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EstGPGeneral");
            entity.Property(e => e.FolderChildCount)
                .HasMaxLength(255)
                .HasColumnName("Folder Child Count");
            entity.Property(e => e.IsComplete).HasDefaultValueSql("((0))");
            entity.Property(e => e.ItemChildCount)
                .HasMaxLength(255)
                .HasColumnName("Item Child Count");
            entity.Property(e => e.ListItemId).HasColumnName("ListItemID");
            entity.Property(e => e.Modified).HasColumnType("datetime");
            entity.Property(e => e.ModifiedBy)
                .HasMaxLength(100)
                .HasColumnName("Modified By");
            entity.Property(e => e.NeedWarranty).HasDefaultValueSql("((0))");
            entity.Property(e => e.OpportunityId)
                .HasMaxLength(50)
                .HasColumnName("OpportunityID");
            entity.Property(e => e.OverallRisk)
                .HasMaxLength(50)
                .HasColumnName("Overall Risk");
            entity.Property(e => e.Pc)
                .HasMaxLength(255)
                .HasColumnName("PC");
            entity.Property(e => e.PicProc)
                .HasMaxLength(255)
                .HasColumnName("PIC Proc");
            entity.Property(e => e.Pid)
                .HasMaxLength(255)
                .HasColumnName("PID");
            entity.Property(e => e.Pm)
                .HasMaxLength(255)
                .HasColumnName("PM");
            entity.Property(e => e.PreId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PreID");
            entity.Property(e => e.PresalesId)
                .HasMaxLength(255)
                .HasColumnName("Presales ID");
            entity.Property(e => e.ProjectSupport)
                .HasMaxLength(255)
                .HasColumnName("Project Support");
            entity.Property(e => e.ProjectType)
                .HasMaxLength(255)
                .HasColumnName("Project Type");
            entity.Property(e => e.ProjectValueIdr)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("Project Value (IDR)");
            entity.Property(e => e.ProjectValueUsd)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("Project Value (USD)");
            entity.Property(e => e.PropMgr)
                .HasMaxLength(255)
                .HasColumnName("Prop. Mgr");
            entity.Property(e => e.ProposalId)
                .HasMaxLength(255)
                .HasColumnName("Proposal ID");
            entity.Property(e => e.ProposalSubmissionDate)
                .HasColumnType("datetime")
                .HasColumnName("Proposal Submission Date");
            entity.Property(e => e.QuotationDeadline)
                .HasColumnType("datetime")
                .HasColumnName("Quotation Deadline");
            entity.Property(e => e.QuotationId)
                .HasMaxLength(255)
                .HasColumnName("Quotation ID");
            entity.Property(e => e.RfpId)
                .HasMaxLength(255)
                .HasColumnName("RFP ID");
            entity.Property(e => e.Stage).HasMaxLength(255);
            entity.Property(e => e.TenderAdm)
                .HasMaxLength(255)
                .HasColumnName("Tender Adm");
            entity.Property(e => e.TitleLinkTitle)
                .HasMaxLength(4000)
                .HasColumnName("Title (LinkTitle)");
            entity.Property(e => e.TitleLinkTitleNoMenu)
                .HasMaxLength(4000)
                .HasColumnName("Title (LinkTitleNoMenu)");
            entity.Property(e => e.TitleTitle)
                .HasMaxLength(255)
                .HasColumnName("Title (Title)");
            entity.Property(e => e.TotalCogsidr).HasColumnName("TotalCOGSIDR");
            entity.Property(e => e.TotalCogsusd).HasColumnName("TotalCOGSUSD");
            entity.Property(e => e.TotalPriceIdr).HasColumnName("TotalPriceIDR");
            entity.Property(e => e.TotalPriceUsd).HasColumnName("TotalPriceUSD");
            entity.Property(e => e.Type).HasMaxLength(4000);
            entity.Property(e => e.Version).HasMaxLength(255);
        });

        modelBuilder.Entity<PreProcHeaderAttachment>(entity =>
        {
            entity.ToTable("PreProcHeaderAttachment");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DocumentTypeId).HasColumnName("DocumentTypeID");
            entity.Property(e => e.Folder).HasMaxLength(50);
            entity.Property(e => e.ItemId).HasColumnName("ItemID");
            entity.Property(e => e.ModifiedBy)
                .HasMaxLength(255)
                .HasColumnName("Modified_by");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.StrictedFileName).HasMaxLength(255);
            entity.Property(e => e.UploadedFrom).HasMaxLength(50);

            entity.HasOne(d => d.DocumentType).WithMany(p => p.PreProcHeaderAttachments)
                .HasForeignKey(d => d.DocumentTypeId)
                .HasConstraintName("FK_PreProcHeaderAttachment_msDocType");

            entity.HasOne(d => d.PreProc).WithMany(p => p.PreProcHeaderAttachments)
                .HasForeignKey(d => d.PreProcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PreProcHeaderAttachment_PreProcGeneralInfo2");
        });

        modelBuilder.Entity<PreProcHistoryReminder>(entity =>
        {
            entity.ToTable("PreProc_HistoryReminder");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FirstReminderDate).HasColumnType("datetime");
            entity.Property(e => e.LastReminderDate).HasColumnType("datetime");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.ReminderId).HasColumnName("ReminderID");
            entity.Property(e => e.ReminderPic)
                .IsUnicode(false)
                .HasColumnName("ReminderPIC");
        });

        modelBuilder.Entity<PreProcPendingBillingReason>(entity =>
        {
            entity.ToTable("PreProcPendingBillingReason");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.EscalationReasonId).HasColumnName("EscalationReasonID");
            entity.Property(e => e.OtherReason).IsUnicode(false);
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.ReasonCreatedDate).HasColumnType("datetime");
            entity.Property(e => e.ReasonPic)
                .IsUnicode(false)
                .HasColumnName("ReasonPIC");
            entity.Property(e => e.ReasonUpdateDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<PreProcPmochecklist>(entity =>
        {
            entity.ToTable("PreProcPMOChecklist");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CheckedCustomerPic).HasColumnName("CheckedCustomerPIC");
            entity.Property(e => e.CheckedHighLevelSow).HasColumnName("CheckedHighLevelSOW");
            entity.Property(e => e.CheckedPicwarrantyTeam).HasColumnName("CheckedPICWarrantyTeam");
            entity.Property(e => e.CheckedPmcostAttachment).HasColumnName("CheckedPMCostAttachment");
            entity.Property(e => e.CheckedProductTeamPic).HasColumnName("CheckedProductTeamPIC");
            entity.Property(e => e.CheckedRfporRksorTor).HasColumnName("CheckedRFPorRKSorTOR");
            entity.Property(e => e.CheckedSpkorPoorContract).HasColumnName("CheckedSPKorPOorContract");
            entity.Property(e => e.CustomerPic)
                .HasMaxLength(255)
                .HasColumnName("Customer PIC");
            entity.Property(e => e.EndDate)
                .HasColumnType("datetime")
                .HasColumnName("End Date");
            entity.Property(e => e.EstimatedKickOffDate)
                .HasColumnType("datetime")
                .HasColumnName("Estimated Kick Off Date");
            entity.Property(e => e.EstimatedKickOffNote)
                .HasMaxLength(255)
                .HasColumnName("Estimated Kick Off Note");
            entity.Property(e => e.EstimatedStartDate)
                .HasColumnType("datetime")
                .HasColumnName("Estimated Start Date");
            entity.Property(e => e.HighLevelSow)
                .HasMaxLength(255)
                .HasColumnName("High Level SOW");
            entity.Property(e => e.Pcmandays).HasColumnName("PCMandays");
            entity.Property(e => e.Pcvalue)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PCValue");
            entity.Property(e => e.PicWarranty)
                .HasMaxLength(255)
                .HasColumnName("PIC Warranty");
            entity.Property(e => e.Pmmandays).HasColumnName("PMMandays");
            entity.Property(e => e.Pmvalue)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PMValue");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.ProductTeamPic)
                .HasMaxLength(255)
                .HasColumnName("Product Team PIC");
            entity.Property(e => e.ProjectSite)
                .HasMaxLength(255)
                .HasColumnName("Project Site");
            entity.Property(e => e.ProjectValue)
                .HasMaxLength(255)
                .HasColumnName("Project Value");
            entity.Property(e => e.SpecificTerms)
                .HasColumnType("text")
                .HasColumnName("Specific Terms");

            entity.HasOne(d => d.PreProc).WithMany(p => p.PreProcPmochecklists)
                .HasForeignKey(d => d.PreProcId)
                .HasConstraintName("FK_PreProcPMOChecklist_PreProcGeneralInfo2");
        });

        modelBuilder.Entity<PreProcPodatum>(entity =>
        {
            entity.ToTable("PreProc_POData");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Buyer)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Curr)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DetailId).HasColumnName("DetailID");
            entity.Property(e => e.Eta)
                .HasColumnType("datetime")
                .HasColumnName("ETA");
            entity.Property(e => e.Etd)
                .HasColumnType("datetime")
                .HasColumnName("ETD");
            entity.Property(e => e.ExpectedPoissuedDate)
                .HasColumnType("datetime")
                .HasColumnName("ExpectedPOIssuedDate");
            entity.Property(e => e.Grbacklog).HasColumnName("GRBacklog");
            entity.Property(e => e.Grdate)
                .HasColumnType("datetime")
                .HasColumnName("GRDate");
            entity.Property(e => e.Grqty).HasColumnName("GRQty");
            entity.Property(e => e.Idnew)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("IDNew");
            entity.Property(e => e.ItemDescription)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.ItemNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Podate)
                .HasColumnType("datetime")
                .HasColumnName("PODate");
            entity.Property(e => e.Poid).HasColumnName("POID");
            entity.Property(e => e.PolineId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("POLineID");
            entity.Property(e => e.Poqty).HasColumnName("POQty");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.Term)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.UnitPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Uom)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UOM");
            entity.Property(e => e.VendorCatalog)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.VendorName)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<PreProcPrincipalProjectRevenue>(entity =>
        {
            entity.ToTable("PreProcPrincipalProjectRevenue");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AuditDetailId).HasColumnName("AuditDetailID");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.ProjectRevenue).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.PreloadNavigation).WithMany(p => p.PreProcPrincipalProjectRevenues)
                .HasForeignKey(d => d.Preload)
                .HasConstraintName("FK_PreProcPrincipalProjectRevenue_msPrincipalPreload");
        });

        modelBuilder.Entity<PreProcReminder>(entity =>
        {
            entity.ToTable("PreProcReminder");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("Created By");
            entity.Property(e => e.MailTo).HasMaxLength(255);
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.UsernameMailTo).HasMaxLength(255);

            entity.HasOne(d => d.PreProc).WithMany(p => p.PreProcReminders)
                .HasForeignKey(d => d.PreProcId)
                .HasConstraintName("FK_PreProcReminder_PreProcGeneralInfo2");
        });

        modelBuilder.Entity<PreProcRisk>(entity =>
        {
            entity.HasKey(e => e.RiskId).HasName("PK_Table_1");

            entity.ToTable("PreProcRisk");

            entity.Property(e => e.RiskId).HasColumnName("RiskID");
            entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");
            entity.Property(e => e.RiskName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.RiskType)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<PreProcRiskAssesmentDatum>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AmapprovalOutcome).HasColumnName("AMApprovalOutcome");
            entity.Property(e => e.AuditTempId).HasColumnName("AuditTempID");
            entity.Property(e => e.CeapprovalOutcome).HasColumnName("CEApprovalOutcome");
            entity.Property(e => e.Competition).HasMaxLength(255);
            entity.Property(e => e.Competitor).HasMaxLength(255);
            entity.Property(e => e.ContigencyCost).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.EstMtac)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EstMTAC");
            entity.Property(e => e.EstProjectCompletion).HasColumnType("datetime");
            entity.Property(e => e.EstProjectStart).HasColumnType("datetime");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.ProcurementType).HasMaxLength(255);
            entity.Property(e => e.ProjectSource).HasMaxLength(255);
            entity.Property(e => e.ReviewDate).HasColumnType("datetime");
            entity.Property(e => e.SdapprovalOutcome).HasColumnName("SDApprovalOutcome");
            entity.Property(e => e.SourceBudget).HasMaxLength(255);

            entity.HasOne(d => d.PreProc).WithMany(p => p.PreProcRiskAssesmentData)
                .HasForeignKey(d => d.PreProcId)
                .HasConstraintName("FK_PreProcRiskAssesmentData_PreProcGeneralInfo2");
        });

        modelBuilder.Entity<PreProcRiskDatum>(entity =>
        {
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CheckedBy)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.RiskId).HasColumnName("RiskID");
            entity.Property(e => e.RiskType).HasMaxLength(50);

            entity.HasOne(d => d.PreProc).WithMany(p => p.PreProcRiskData)
                .HasForeignKey(d => d.PreProcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PreProcRiskData_PreProcGeneralInfo2");
        });

        modelBuilder.Entity<PreProcSession>(entity =>
        {
            entity.HasKey(e => e.PreProcid);

            entity.ToTable("PreProcSession");

            entity.Property(e => e.PreProcid)
                .HasMaxLength(50)
                .HasColumnName("PrePROCID");
            entity.Property(e => e.Modified).HasColumnType("datetime");
            entity.Property(e => e.ModifiedBy)
                .HasMaxLength(255)
                .HasColumnName("Modified by");
        });

        modelBuilder.Entity<RevNpc>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("Rev_NPC");

            entity.Property(e => e.AccountName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Amname)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("AMName");
            entity.Property(e => e.ContractDate).HasColumnType("datetime");
            entity.Property(e => e.CostSheetId)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Counter)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CurrCode)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.ExRate).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.Login)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Nkpcode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NKPCode");
            entity.Property(e => e.Pidfull)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("PIDFull");
            entity.Property(e => e.PocontractNo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("POContractNo");
            entity.Property(e => e.Price).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ProjectId)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("ProjectID");
            entity.Property(e => e.ProjectName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Saname)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("SAName");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SubTypeCode)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.SubTypeName)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.Top)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("TOP");
            entity.Property(e => e.Total).HasColumnType("decimal(15, 2)");
        });

        modelBuilder.Entity<StockReqItemNewReminderHistory>(entity =>
        {
            entity.HasKey(e => e.StockreqId);

            entity.ToTable("StockReq_ItemNew_Reminder_History");

            entity.Property(e => e.StockreqId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STOCKREQ_ID");
            entity.Property(e => e.LastReminderDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<StockReqReminderHistory>(entity =>
        {
            entity.HasKey(e => e.StockreqId);

            entity.ToTable("StockReq_Reminder_History");

            entity.Property(e => e.StockreqId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STOCKREQ_ID");
            entity.Property(e => e.LastReminderDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<StockRequisitionMonitoring>(entity =>
        {
            entity.ToTable("StockRequisitionMonitoring");

            entity.HasKey(e => e.Title);

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Am)
                .IsUnicode(false)
                .HasColumnName("AM");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.Pmomanager)
                .IsUnicode(false)
                .HasColumnName("PMOManager");
            entity.Property(e => e.Procurement)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.ProjectSupport).IsUnicode(false);
            entity.Property(e => e.ProjectedCustomer).IsUnicode(false);
            entity.Property(e => e.SystemAdmin).IsUnicode(false);
            entity.Property(e => e.Title).IsUnicode(false);
            entity.Property(e => e.Warehouse).IsUnicode(false);
        });

        modelBuilder.Entity<TempPreProcDetail>(entity =>
        {
            entity.HasKey(e => e.DetailId);

            entity.ToTable("TempPreProcDetail");

            entity.Property(e => e.DetailId).HasColumnName("DetailID");
            entity.Property(e => e.AmmanagerApproval)
                .HasMaxLength(255)
                .HasColumnName("AMManagerApproval");
            entity.Property(e => e.AuditDetailId).HasColumnName("AuditDetailID");
            entity.Property(e => e.Currency).HasMaxLength(255);
            entity.Property(e => e.DetailIdold).HasColumnName("DetailIDOld");
            entity.Property(e => e.Eta)
                .HasColumnType("datetime")
                .HasColumnName("ETA");
            entity.Property(e => e.Etd)
                .HasColumnType("datetime")
                .HasColumnName("ETD");
            entity.Property(e => e.ExpectedPoissuedDate)
                .HasColumnType("datetime")
                .HasColumnName("ExpectedPOIssuedDate");
            entity.Property(e => e.FirstId).HasColumnName("FirstID");
            entity.Property(e => e.Grbacklog).HasColumnName("GRBacklog");
            entity.Property(e => e.Grdate)
                .HasColumnType("datetime")
                .HasColumnName("GRDate");
            entity.Property(e => e.Grn)
                .HasMaxLength(255)
                .HasColumnName("GRN");
            entity.Property(e => e.GrnattachId).HasColumnName("GRNAttachID");
            entity.Property(e => e.Grqty).HasColumnName("GRQty");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Idnew)
                .HasMaxLength(10)
                .HasColumnName("IDNew");
            entity.Property(e => e.ItemDesc).HasMaxLength(255);
            entity.Property(e => e.Mlptpo)
                .HasMaxLength(255)
                .HasColumnName("MLPTPO");
            entity.Property(e => e.Mlptpodate)
                .HasColumnType("datetime")
                .HasColumnName("MLPTPODate");
            entity.Property(e => e.Mlptpono)
                .HasMaxLength(50)
                .HasColumnName("MLPTPONo");
            entity.Property(e => e.MpoattachId).HasColumnName("MPOAttachID");
            entity.Property(e => e.Nkpcode)
                .HasMaxLength(255)
                .HasColumnName("NKPCode");
            entity.Property(e => e.Pidfull)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PIDFull");
            entity.Property(e => e.PonumberId)
                .HasMaxLength(255)
                .HasColumnName("PONumberID");
            entity.Property(e => e.PreProcId)
                .HasMaxLength(50)
                .HasColumnName("PrePROC_ID");
            entity.Property(e => e.PresalesReview).HasMaxLength(255);
            entity.Property(e => e.Principle).HasMaxLength(255);
            entity.Property(e => e.ProcessedAmreview).HasColumnName("ProcessedAMReview");
            entity.Property(e => e.ProductManager).HasMaxLength(255);
            entity.Property(e => e.Risk).HasMaxLength(50);
            entity.Property(e => e.SecondId).HasColumnName("SecondID");
            entity.Property(e => e.Spec).HasMaxLength(255);
            entity.Property(e => e.SpecAttachId).HasColumnName("SpecAttachID");
            entity.Property(e => e.SurDuk).HasMaxLength(255);
            entity.Property(e => e.SurdukAttachId).HasColumnName("SurdukAttachID");
            entity.Property(e => e.TotalCogs)
                .HasMaxLength(255)
                .HasColumnName("TotalCOGS");
            entity.Property(e => e.TotalPrice).HasMaxLength(255);
            entity.Property(e => e.UnitCogs).HasColumnName("UnitCOGS");
            entity.Property(e => e.Vendor).HasMaxLength(255);
            entity.Property(e => e.VendorQuoAttachId).HasColumnName("VendorQuoAttachID");
            entity.Property(e => e.VendorQuotation).HasMaxLength(255);
        });

        modelBuilder.Entity<VwCshdEpm>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_CSHd_EPM");

            entity.Property(e => e.AccountName).HasMaxLength(200);
            entity.Property(e => e.Amlogin)
                .HasMaxLength(51)
                .HasColumnName("AMLogin");
            entity.Property(e => e.Amname)
                .HasMaxLength(100)
                .HasColumnName("AMName");
            entity.Property(e => e.ApprovalDate).HasColumnType("datetime");
            entity.Property(e => e.AuthorizedGroup).HasMaxLength(10);
            entity.Property(e => e.ContractDate).HasColumnType("datetime");
            entity.Property(e => e.CostSheetId)
                .HasMaxLength(10)
                .HasColumnName("CostSheetID");
            entity.Property(e => e.Counter).HasMaxLength(3);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CurrCode).HasMaxLength(5);
            entity.Property(e => e.DomainName).HasMaxLength(1);
            entity.Property(e => e.Exrate).HasColumnType("numeric(15, 2)");
            entity.Property(e => e.MpcCategory)
                .HasMaxLength(1)
                .HasColumnName("mpc_category");
            entity.Property(e => e.MpcDescription)
                .HasMaxLength(500)
                .HasColumnName("mpc_description");
            entity.Property(e => e.MpcName)
                .HasMaxLength(200)
                .HasColumnName("mpc_name");
            entity.Property(e => e.MpcPid)
                .HasMaxLength(16)
                .HasColumnName("mpc_pid");
            entity.Property(e => e.MpcPlannedenddate)
                .HasColumnType("datetime")
                .HasColumnName("mpc_plannedenddate");
            entity.Property(e => e.MpcPlannedstartdate)
                .HasColumnType("datetime")
                .HasColumnName("mpc_plannedstartdate");
            entity.Property(e => e.MpcStatus)
                .HasMaxLength(50)
                .HasColumnName("mpc_status");
            entity.Property(e => e.Owneridname)
                .HasMaxLength(1)
                .HasColumnName("owneridname");
            entity.Property(e => e.PocontractNo)
                .HasMaxLength(255)
                .HasColumnName("POContractNo");
            entity.Property(e => e.ProjectId)
                .HasMaxLength(15)
                .HasColumnName("ProjectID");
            entity.Property(e => e.Salogin)
                .HasMaxLength(51)
                .HasColumnName("SALogin");
            entity.Property(e => e.Saname)
                .HasMaxLength(150)
                .HasColumnName("SAName");
            entity.Property(e => e.TermOfPayment).HasMaxLength(1000);
            entity.Property(e => e.Total).HasColumnType("numeric(38, 2)");
            entity.Property(e => e.TotalRevenue).HasColumnType("numeric(15, 2)");
        });

        modelBuilder.Entity<VwDataInvoice>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_DataInvoice");

            entity.Property(e => e.CurrCode).HasMaxLength(5);
            entity.Property(e => e.JumlahInvoice).HasColumnType("numeric(38, 2)");
            entity.Property(e => e.Pid)
                .HasMaxLength(10)
                .HasColumnName("PID");
            entity.Property(e => e.TotalRevenue).HasColumnType("numeric(15, 2)");
        });

        modelBuilder.Entity<VwEmployeeBase>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_EmployeeBase");

            entity.Property(e => e.BankAccountNumber)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.Directorat)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.Division)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.DomainName)
                .HasMaxLength(1024)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName)
                .HasMaxLength(200)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.FullName)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.Group)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel)
                .IsRequired()
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.Section)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.Unit)
                .HasMaxLength(100)
                .UseCollation("Latin1_General_CI_AI");
        });

        modelBuilder.Entity<VwEmployeeBaseEreq>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_EmployeeBaseEReq");

            entity.Property(e => e.ActiveNip)
                .HasColumnType("decimal(15, 5)")
                .HasColumnName("ActiveNIP");
            entity.Property(e => e.Bu)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BU");
            entity.Property(e => e.Company)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("company");
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.CurrentGroup)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Department)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Division)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EmailAddress)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Level).HasColumnName("LEVEL");
            entity.Property(e => e.Level00)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL00");
            entity.Property(e => e.Level01)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL01");
            entity.Property(e => e.Level02)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL02");
            entity.Property(e => e.Level03)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL03");
            entity.Property(e => e.Level04)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL04");
            entity.Property(e => e.Level05)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL05");
            entity.Property(e => e.Level06)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("level06");
            entity.Property(e => e.Level07)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Login)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Nama)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NAMA");
            entity.Property(e => e.Nip)
                .HasColumnType("decimal(15, 5)")
                .HasColumnName("NIP");
            entity.Property(e => e.Section)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<VwEmployeeBasePrm>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_EmployeeBasePRM");

            entity.Property(e => e.BankAccountNumber).HasMaxLength(100);
            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division).HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel).HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone).HasMaxLength(100);
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwExportItem>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_ExportItem");

            entity.Property(e => e.DetailId)
                .HasMaxLength(10)
                .HasColumnName("DetailID");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Insurance)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.ItemDesc).HasMaxLength(255);
            entity.Property(e => e.ListItemId).HasColumnName("ListItemID");
            entity.Property(e => e.Nkpcode)
                .HasMaxLength(255)
                .HasColumnName("NKPCode");
            entity.Property(e => e.Principle).HasMaxLength(255);
            entity.Property(e => e.SurDuk)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VwGetAdminMember>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getAdminMembers");

            entity.Property(e => e.DomainName).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetAllOptyId>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getAllOptyID");

            entity.Property(e => e.AccountName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Budgetstatus)
                .HasMaxLength(256)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("budgetstatus");
            entity.Property(e => e.Currency)
                .HasMaxLength(8)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.Estimatedclosedate)
                .HasColumnType("datetime")
                .HasColumnName("estimatedclosedate");
            entity.Property(e => e.Estimatedvalue)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("estimatedvalue");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.InitialCode)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Internalemailaddress)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("internalemailaddress");
            entity.Property(e => e.Modifiedon)
                .HasColumnType("datetime")
                .HasColumnName("modifiedon");
            entity.Property(e => e.Name)
                .HasMaxLength(256)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("name");
            entity.Property(e => e.NewDealregistration)
                .HasMaxLength(9)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("new_dealregistration");
            entity.Property(e => e.NewDownpayment)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("new_downpayment");
            entity.Property(e => e.NewEstdpreceivedate)
                .HasColumnType("datetime")
                .HasColumnName("new_estdpreceivedate");
            entity.Property(e => e.NewEstimatedgp)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("new_estimatedgp");
            entity.Property(e => e.NewOptynumber)
                .HasMaxLength(16)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("new_optynumber");
            entity.Property(e => e.NewPercentdp)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("new_percentdp");
            entity.Property(e => e.NewPercentgp)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("new_percentgp");
            entity.Property(e => e.NewPresalesid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("new_presalesid");
            entity.Property(e => e.NewProductrevenue)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("new_productrevenue");
            entity.Property(e => e.NewRecurring)
                .HasMaxLength(8)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("new_recurring");
            entity.Property(e => e.Opportunityid)
                .HasMaxLength(64)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("opportunityid");
            entity.Property(e => e.Opportunityratingcode)
                .HasMaxLength(16)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("opportunityratingcode");
            entity.Property(e => e.Ownerid)
                .HasMaxLength(64)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("ownerid");
            entity.Property(e => e.Statecode)
                .HasMaxLength(16)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("statecode");
            entity.Property(e => e.Totalamount)
                .HasColumnType("numeric(18, 2)")
                .HasColumnName("totalamount");
        });

        modelBuilder.Entity<VwGetAllPid>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getAllPID");

            entity.Property(e => e.Br)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BR");
            entity.Property(e => e.BrId).HasColumnName("BR_ID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Creator)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CreatorId).HasColumnName("Creator_ID");
            entity.Property(e => e.CurrencyCogs)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("CurrencyCOGS");
            entity.Property(e => e.CurrencyCogsId).HasColumnName("CurrencyCOGS_ID");
            entity.Property(e => e.CurrencyCogsbefore)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("CurrencyCOGSBefore");
            entity.Property(e => e.CurrencyCogsbeforeId).HasColumnName("CurrencyCOGSBefore_ID");
            entity.Property(e => e.CurrencyId)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("CurrencyID");
            entity.Property(e => e.CurrencyIdId).HasColumnName("CurrencyID_ID");
            entity.Property(e => e.CurrencyIdbefore)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("CurrencyIDBefore");
            entity.Property(e => e.CurrencyIdbeforeId).HasColumnName("CurrencyIDBefore_ID");
            entity.Property(e => e.CustomerCode)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.CustomerId)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("CustomerID");
            entity.Property(e => e.CustomerIdId).HasColumnName("CustomerID_ID");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.End).HasColumnType("datetime");
            entity.Property(e => e.EndCustomerId)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("EndCustomerID");
            entity.Property(e => e.EndCustomerIdId).HasColumnName("EndCustomerID_ID");
            entity.Property(e => e.ExchangeRate).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.ExchangeRateId).HasColumnName("ExchangeRate_ID");
            entity.Property(e => e.FirstBr)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FirstBR");
            entity.Property(e => e.FirstBrId).HasColumnName("FirstBR_ID");
            entity.Property(e => e.FlagCurrency)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.HedgingStatus)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.IsEdited).HasColumnName("isEdited");
            entity.Property(e => e.Modified).HasColumnType("datetime");
            entity.Property(e => e.OwnershipCode)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.OwnershipCodeId).HasColumnName("OwnershipCode_ID");
            entity.Property(e => e.Pidcategory)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PIDCategory");
            entity.Property(e => e.PidcategoryId).HasColumnName("PIDCategory_ID");
            entity.Property(e => e.ProjectCogs)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("ProjectCOGS");
            entity.Property(e => e.ProjectCogsbefore)
                .HasColumnType("decimal(15, 2)")
                .HasColumnName("ProjectCOGSBefore");
            entity.Property(e => e.ProjectId)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("ProjectID");
            entity.Property(e => e.ProjectName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.ProjectRevenue).HasColumnType("decimal(20, 2)");
            entity.Property(e => e.ProjectRevenueIdr)
                .HasColumnType("numeric(20, 2)")
                .HasColumnName("ProjectRevenueIDR");
            entity.Property(e => e.ProjectStatus)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ProjectStatusId).HasColumnName("ProjectStatus_ID");
            entity.Property(e => e.ProjectTypeId)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("ProjectTypeID");
            entity.Property(e => e.ProjectTypeIdId).HasColumnName("ProjectTypeID_ID");
            entity.Property(e => e.RemarkForEdit)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.SpecialRate).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.SpecialRateBefore).HasColumnType("decimal(15, 2)");
            entity.Property(e => e.Start).HasColumnType("datetime");
            entity.Property(e => e.TrProjectIdId).HasColumnName("trProjectID_ID");
            entity.Property(e => e.TreasurySpotRate)
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VwGetAmmember>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getAMMember");

            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmailCrm)
                .HasMaxLength(100)
                .HasColumnName("emailCRM");
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.Nip)
                .HasColumnType("decimal(15, 5)")
                .HasColumnName("NIP");
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetBodfull>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getBODFull");

            entity.Property(e => e.ActiveNip)
                .HasColumnType("decimal(15, 5)")
                .HasColumnName("ActiveNIP");
            entity.Property(e => e.Bu)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BU");
            entity.Property(e => e.Company)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("company");
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.CurrentGroup)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Department)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Division)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EmailAddress)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Level).HasColumnName("LEVEL");
            entity.Property(e => e.Level00)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL00");
            entity.Property(e => e.Level01)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL01");
            entity.Property(e => e.Level02)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL02");
            entity.Property(e => e.Level03)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL03");
            entity.Property(e => e.Level04)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL04");
            entity.Property(e => e.Level05)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LEVEL05");
            entity.Property(e => e.Level06)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("level06");
            entity.Property(e => e.Level07)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Login)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Nama)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NAMA");
            entity.Property(e => e.Nip)
                .HasColumnType("decimal(15, 5)")
                .HasColumnName("NIP");
            entity.Property(e => e.Section)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<VwGetMplPoAll>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_Get_MPL_PO_ALL");

            entity.Property(e => e.Buyer)
                .HasMaxLength(362)
                .HasColumnName("BUYER");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(15)
                .HasColumnName("CURRENCY_CODE");
            entity.Property(e => e.Description)
                .HasMaxLength(240)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.DueDate)
                .HasColumnType("datetime")
                .HasColumnName("DUE_DATE");
            entity.Property(e => e.ItemNo)
                .HasMaxLength(40)
                .HasColumnName("ITEM_NO");
            entity.Property(e => e.NamaVendor)
                .HasMaxLength(240)
                .HasColumnName("NAMA_VENDOR");
            entity.Property(e => e.NoPo)
                .HasMaxLength(20)
                .HasColumnName("NO_PO");
            entity.Property(e => e.NoVendor)
                .HasMaxLength(30)
                .HasColumnName("NO_VENDOR");
            entity.Property(e => e.Pid)
                .HasMaxLength(240)
                .HasColumnName("PID");
            entity.Property(e => e.Pidnum)
                .HasMaxLength(245)
                .HasColumnName("PIDNum");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.TanggalPo)
                .HasColumnType("datetime")
                .HasColumnName("TANGGAL_PO");
            entity.Property(e => e.Term)
                .HasMaxLength(50)
                .HasColumnName("TERM");
            entity.Property(e => e.UnitPrice).HasColumnName("UNIT_PRICE");
            entity.Property(e => e.Uom)
                .HasMaxLength(25)
                .HasColumnName("UOM");
            entity.Property(e => e.VendorCatalog)
                .HasMaxLength(255)
                .HasColumnName("VENDOR_CATALOG");
        });

        modelBuilder.Entity<VwGetNkpname>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getNKPName");

            entity.Property(e => e.Domain)
                .HasMaxLength(8000)
                .IsUnicode(false);
            entity.Property(e => e.NkpcodeLinkTitle)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NKPCode (LinkTitle)");
            entity.Property(e => e.Nkpname)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("NKPName");
            entity.Property(e => e.ProductManager)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.VendorId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("VendorID");
        });

        modelBuilder.Entity<VwGetPcmemberFull>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getPCMemberFull");

            entity.Property(e => e.BankAccountNumber).HasMaxLength(100);
            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division).HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel).HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone).HasMaxLength(100);
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetPmmemberFull>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getPMMemberFull");

            entity.Property(e => e.BankAccountNumber).HasMaxLength(100);
            entity.Property(e => e.CurrentUnit)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.DomainName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.EmployeeEmail)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel).HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone).HasMaxLength(100);
            entity.Property(e => e.Section)
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetPmomemberFull>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getPMOMemberFull");

            entity.Property(e => e.BankAccountNumber).HasMaxLength(100);
            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division).HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmployeeEmail)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel).HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone).HasMaxLength(100);
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetPossibleProductManager>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getPossibleProductManagers");

            entity.Property(e => e.BankAccountNumber).HasMaxLength(100);
            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division).HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone).HasMaxLength(100);
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetPresalesMemberFull>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getPresalesMemberFull");

            entity.Property(e => e.BankAccountNumber).HasMaxLength(100);
            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division).HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone).HasMaxLength(100);
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetProcurementMemberFull>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getProcurementMemberFull");

            entity.Property(e => e.BankAccountNumber).HasMaxLength(100);
            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division).HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone).HasMaxLength(100);
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetProjectSupportMemberFull>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getProjectSupportMemberFull");

            entity.Property(e => e.BankAccountNumber).HasMaxLength(100);
            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division).HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone).HasMaxLength(100);
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetTenderAdminMemberFull>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getTenderAdminMemberFull");

            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division).HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmailCrm)
                .HasMaxLength(100)
                .HasColumnName("emailCRM");
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel).HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.Nip)
                .HasColumnType("decimal(15, 5)")
                .HasColumnName("NIP");
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGetVendor>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getVendor");

            entity.Property(e => e.VendorName)
                .HasMaxLength(240)
                .HasColumnName("VENDOR_NAME");
            entity.Property(e => e.VendorTypeLookupCode)
                .HasMaxLength(30)
                .HasColumnName("VENDOR_TYPE_LOOKUP_CODE");
        });

        modelBuilder.Entity<VwGetWarehouseMember>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_getWarehouseMember");

            entity.Property(e => e.BankAccountNumber).HasMaxLength(100);
            entity.Property(e => e.CurrentUnit)
                .HasMaxLength(100)
                .HasColumnName("currentUnit");
            entity.Property(e => e.Department).HasMaxLength(100);
            entity.Property(e => e.Directorat).HasMaxLength(100);
            entity.Property(e => e.Division).HasMaxLength(100);
            entity.Property(e => e.DomainName).HasMaxLength(100);
            entity.Property(e => e.EmployeeEmail)
                .HasMaxLength(100)
                .HasColumnName("employee_email");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(100)
                .HasColumnName("Employee_Name");
            entity.Property(e => e.EmployeeNip)
                .HasMaxLength(100)
                .HasColumnName("Employee_NIP");
            entity.Property(e => e.EmployeeSystemName).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Group).HasMaxLength(100);
            entity.Property(e => e.JobTitle)
                .HasMaxLength(100)
                .HasColumnName("Job_Title");
            entity.Property(e => e.JobTitleLevel)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.LeaveStatus).HasColumnName("leaveStatus");
            entity.Property(e => e.Manager1Email)
                .HasMaxLength(100)
                .HasColumnName("manager_1_email");
            entity.Property(e => e.Manager1Name)
                .HasMaxLength(100)
                .HasColumnName("manager_1_name");
            entity.Property(e => e.Manager2Email)
                .HasMaxLength(100)
                .HasColumnName("manager_2_email");
            entity.Property(e => e.Manager2Name)
                .HasMaxLength(100)
                .HasColumnName("manager_2_name");
            entity.Property(e => e.Manager3Email)
                .HasMaxLength(100)
                .HasColumnName("manager_3_email");
            entity.Property(e => e.Manager3Name)
                .HasMaxLength(100)
                .HasColumnName("manager_3_name");
            entity.Property(e => e.Manager4Email)
                .HasMaxLength(100)
                .HasColumnName("manager_4_email");
            entity.Property(e => e.Manager4Name)
                .HasMaxLength(100)
                .HasColumnName("manager_4_name");
            entity.Property(e => e.Manager5Email)
                .HasMaxLength(100)
                .HasColumnName("manager_5_email");
            entity.Property(e => e.Manager5Name)
                .HasMaxLength(100)
                .HasColumnName("manager_5_name");
            entity.Property(e => e.MobilePhone).HasMaxLength(100);
            entity.Property(e => e.Section).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(100);
        });

        modelBuilder.Entity<VwGpTrStockReqForm>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_gp_tr_Stock_Req_Form");

            entity.Property(e => e.ContractReceived).HasColumnType("datetime");
            entity.Property(e => e.Currency)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CustomerType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PID");
            entity.Property(e => e.ProjectDesc)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ProjectId)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("Project_ID");
            entity.Property(e => e.ProjectedCust)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProposalNo)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("Proposal_No");
            entity.Property(e => e.QuotationNo)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("Quotation_No");
            entity.Property(e => e.Remark)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ReqAppStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ReqArrivalDate).HasColumnType("datetime");
            entity.Property(e => e.ReqName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ReqNip)
                .HasColumnType("numeric(15, 5)")
                .HasColumnName("ReqNIP");
            entity.Property(e => e.RequestedDate).HasColumnType("datetime");
            entity.Property(e => e.StockReqId)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.VendorName)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VwIssuePendingBillingReason>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_IssuePendingBillingReason");

            entity.Property(e => e.FullPid)
                .HasMaxLength(258)
                .HasColumnName("FullPID");
            entity.Property(e => e.IssueDescription).IsUnicode(false);
            entity.Property(e => e.IssueTypeFrom)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.PcloginInPreProc)
                .HasMaxLength(255)
                .HasColumnName("PCLoginInPreProc");
            entity.Property(e => e.PcnameInPreProc)
                .HasMaxLength(100)
                .HasColumnName("PCNameInPreProc");
            entity.Property(e => e.PmloginInPreProc)
                .HasMaxLength(255)
                .HasColumnName("PMLoginInPreProc");
            entity.Property(e => e.PmnameInPreProc)
                .HasMaxLength(100)
                .HasColumnName("PMNameInPreProc");
            entity.Property(e => e.ReasonCreatedDate).HasColumnType("datetime");
            entity.Property(e => e.ReasonDate).HasColumnType("datetime");
            entity.Property(e => e.ReasonPic).HasColumnName("ReasonPIC");
            entity.Property(e => e.ReasonUpdateDate).HasColumnType("datetime");
            entity.Property(e => e.StatusPending)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VwKodeAccount>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_KodeAccount");

            entity.Property(e => e.Accountclassificationcode).HasColumnName("accountclassificationcode");
            entity.Property(e => e.Kodeacc)
                .HasMaxLength(267)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("kodeacc");
            entity.Property(e => e.Name)
                .HasMaxLength(256)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.NewInitialCodeNew)
                .HasMaxLength(8)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI")
                .HasColumnName("new_InitialCodeNew");
            entity.Property(e => e.Statecode).HasColumnName("statecode");
        });

        modelBuilder.Entity<VwManagerP>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_ManagerPS");

            entity.Property(e => e.DomainName).HasMaxLength(100);
        });

        modelBuilder.Entity<VwMappingSagroup>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_MappingSAGroup");

            entity.Property(e => e.DomainName)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.MsEmployeesId).HasColumnName("msEmployees_ID");
            entity.Property(e => e.MsOrgId).HasColumnName("msOrg_ID");
            entity.Property(e => e.UnitShortName)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VwReasonPicname>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_ReasonPICName");

            entity.Property(e => e.Pic).HasColumnName("PIC");
            entity.Property(e => e.Picname)
                .HasMaxLength(100)
                .HasColumnName("PICName");
            entity.Property(e => e.ReasonId).HasColumnName("ReasonID");
        });

        modelBuilder.Entity<VwReasonPicnameClear>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_ReasonPICName_Clear");

            entity.Property(e => e.Picnamee).HasColumnName("PICNamee");
            entity.Property(e => e.ReasonId).HasColumnName("ReasonID");
        });

        modelBuilder.Entity<VwReminderNewStockReq>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_Reminder_New_StockReq");

            entity.Property(e => e.Am)
                .HasMaxLength(255)
                .HasColumnName("AM");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ListItemId).HasColumnName("ListItemID");
            entity.Property(e => e.Pid)
                .HasMaxLength(255)
                .HasColumnName("PID");
            entity.Property(e => e.ProjectSupport)
                .HasMaxLength(255)
                .HasColumnName("Project Support");
            entity.Property(e => e.Psmanager)
                .HasMaxLength(100)
                .HasColumnName("PSManager");
            entity.Property(e => e.Warehouse)
                .IsRequired()
                .HasMaxLength(69)
                .IsUnicode(false)
                .HasColumnName("warehouse");
        });

        modelBuilder.Entity<VwReminderPendingBillingReasonHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_ReminderPendingBillingReason_Header");

            entity.Property(e => e.Am)
                .IsUnicode(false)
                .HasColumnName("AM");
            entity.Property(e => e.ReasonDate).HasColumnType("date");
        });

        modelBuilder.Entity<VwReportTrackingDeliverySheet>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_ReportTrackingDeliverySheet");

            entity.Property(e => e.Customer)
                .HasMaxLength(256)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AI");
            entity.Property(e => e.Eta)
                .HasColumnType("datetime")
                .HasColumnName("ETA");
            entity.Property(e => e.Etd)
                .HasColumnType("datetime")
                .HasColumnName("ETD");
            entity.Property(e => e.Grdate)
                .HasColumnType("datetime")
                .HasColumnName("GRDate");
            entity.Property(e => e.Grqty).HasColumnName("GRQty");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Idnew)
                .HasMaxLength(10)
                .HasColumnName("IDNew");
            entity.Property(e => e.ItemDesc).HasMaxLength(255);
            entity.Property(e => e.ListItemId).HasColumnName("ListItemID");
            entity.Property(e => e.Mlptpodate)
                .HasColumnType("datetime")
                .HasColumnName("MLPTPODate");
            entity.Property(e => e.Mlptpono)
                .HasMaxLength(50)
                .HasColumnName("MLPTPONo");
            entity.Property(e => e.Pid)
                .HasMaxLength(255)
                .HasColumnName("PID");
            entity.Property(e => e.PocontractNo)
                .HasMaxLength(255)
                .HasColumnName("POContractNo");
        });

        modelBuilder.Entity<VwStockReqReminder>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_StockReq_Reminder");

            entity.Property(e => e.Am)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("AM");
            entity.Property(e => e.GrDate)
                .HasColumnType("datetime")
                .HasColumnName("GR_Date");
            entity.Property(e => e.Listitemid).HasColumnName("LISTITEMID");
            entity.Property(e => e.ProjectSupport)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("Project_Support");
            entity.Property(e => e.PsMgr)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false)
                .HasColumnName("PS_MGR");
            entity.Property(e => e.Requestor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("REQUESTOR");
            entity.Property(e => e.StockReqNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STOCK_REQ_NUMBER");
        });

        modelBuilder.Entity<VwStockReqReminderGr>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_StockReq_ReminderGR");

            entity.Property(e => e.Am)
                .HasMaxLength(255)
                .HasColumnName("AM");
            entity.Property(e => e.DetailId).HasColumnName("DetailID");
            entity.Property(e => e.Eta)
                .HasColumnType("datetime")
                .HasColumnName("ETA");
            entity.Property(e => e.Etd)
                .HasColumnType("datetime")
                .HasColumnName("ETD");
            entity.Property(e => e.ExpectedPoissuedDate)
                .HasColumnType("datetime")
                .HasColumnName("ExpectedPOIssuedDate");
            entity.Property(e => e.Grbacklog).HasColumnName("GRBacklog");
            entity.Property(e => e.Grdate)
                .HasColumnType("datetime")
                .HasColumnName("GRDate");
            entity.Property(e => e.Grqty).HasColumnName("GRQty");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Idnew)
                .HasMaxLength(10)
                .HasColumnName("IDNew");
            entity.Property(e => e.ItemDesc).HasMaxLength(255);
            entity.Property(e => e.Nkpcode)
                .HasMaxLength(255)
                .HasColumnName("NKPCode");
            entity.Property(e => e.Pid)
                .HasMaxLength(255)
                .HasColumnName("PID");
            entity.Property(e => e.Podate)
                .HasColumnType("datetime")
                .HasColumnName("PODate");
            entity.Property(e => e.Poid).HasColumnName("POID");
            entity.Property(e => e.Poqty).HasColumnName("POQty");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.ProjectSupport)
                .HasMaxLength(255)
                .HasColumnName("Project Support");
            entity.Property(e => e.Uom)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UOM");
            entity.Property(e => e.VendorName)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VwStockReqReminderGrheader>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_StockReq_ReminderGRHeader");

            entity.Property(e => e.Am)
                .HasMaxLength(255)
                .HasColumnName("AM");
            entity.Property(e => e.ListItemId).HasColumnName("ListItemID");
            entity.Property(e => e.Pid)
                .HasMaxLength(255)
                .HasColumnName("PID");
            entity.Property(e => e.PreProcId).HasColumnName("PreProcID");
            entity.Property(e => e.ProjectSupport)
                .HasMaxLength(255)
                .HasColumnName("Project Support");
            entity.Property(e => e.PsMgr)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("PS_MGR");
        });

        modelBuilder.Entity<VwVendor>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("vw_Vendor");

            entity.Property(e => e.Vendor)
                .IsRequired()
                .IsUnicode(false);
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}